name: Build Lambda Functions

on:
  push:
    branches: [ "main" ]
    paths:
      - "Cargo.toml"
  workflow_dispatch: # Allows manual triggering

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    if: ${{ github.event.head_commit.message == 'cargo-release version bump' }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Cache Cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install cargo-lambda (if not cached)
      run: |
        if ! command -v cargo-lambda &> /dev/null; then
          rustup update stable
          rustup target add x86_64-unknown-linux-musl
          cargo install cargo-lambda
        fi

    - name: Install Zig
      uses: mlugg/setup-zig@v1
    
    - name: Build Lambda Functions
      run: cargo lambda build --release --output-format zip

    - name: Copy Lambda Artifacts to Output Directory
      run: |
        mkdir -p artifacts
        for dir in target/lambda/*; do
          if [ -d "$dir" ]; then
            function_name=$(basename "$dir")
            cp "$dir/bootstrap.zip" "artifacts/${function_name}.zip"
          fi
        done

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: lambda-artifacts
        path: artifacts/
