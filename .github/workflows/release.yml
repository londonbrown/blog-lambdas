name: Publish Lambda Release

on:
  workflow_run:
    workflows: ["Build Lambda Functions"]
    types:
      - completed
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Cargo Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys:
            ${{ runner.os }}-cargo-

      - name: Install git-cliff
        run: |
          if ! command -v git-cliff &> /dev/null; then
            cargo install git-cliff
          fi

      - name: Extract Version from Cargo Metadata
        id: get_version
        run: |
          VERSION=$(cargo metadata --format-version 1 --no-deps | jq -r '.packages[0].version')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Detected version: $VERSION"

      - name: Generate CHANGELOG with git-cliff
        run: |
          git-cliff --latest > CHANGELOG.md
          cat CHANGELOG.md

      - name: Commit & Push Updated Changelog
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add CHANGELOG.md
          git commit -m "[bot] update changelog for release" --author="github-actions <github-actions@github.com>"
          git push origin main

      - name: Create Git Tag
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: lambda-artifacts
          path: artifacts/

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false
          files: |
            artifacts/*.zip
